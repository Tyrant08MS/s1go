// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stage1st.proto

/*
Package stage1stpb is a generated protocol buffer package.

It is generated from these files:
	stage1st.proto

It has these top-level messages:
	Post
	ThreadInfo
	Thread
*/
package stage1stpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Post struct {
	Content  string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Author   string `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	PostTime int64  `protobuf:"varint,3,opt,name=post_time,json=postTime" json:"post_time,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Post) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Post) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Post) GetPostTime() int64 {
	if m != nil {
		return m.PostTime
	}
	return 0
}

type ThreadInfo struct {
	Rank      int32 `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	Replies   int32 `protobuf:"varint,2,opt,name=replies" json:"replies,omitempty"`
	Timestamp int64 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ThreadInfo) Reset()                    { *m = ThreadInfo{} }
func (m *ThreadInfo) String() string            { return proto.CompactTextString(m) }
func (*ThreadInfo) ProtoMessage()               {}
func (*ThreadInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ThreadInfo) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *ThreadInfo) GetReplies() int32 {
	if m != nil {
		return m.Replies
	}
	return 0
}

func (m *ThreadInfo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Thread struct {
	ThreadId    int32         `protobuf:"varint,1,opt,name=thread_id,json=threadId" json:"thread_id,omitempty"`
	ForumId     int32         `protobuf:"varint,2,opt,name=forum_id,json=forumId" json:"forum_id,omitempty"`
	Title       string        `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	ThreadInfos []*ThreadInfo `protobuf:"bytes,4,rep,name=thread_infos,json=threadInfos" json:"thread_infos,omitempty"`
	Posts       []*Post       `protobuf:"bytes,5,rep,name=posts" json:"posts,omitempty"`
}

func (m *Thread) Reset()                    { *m = Thread{} }
func (m *Thread) String() string            { return proto.CompactTextString(m) }
func (*Thread) ProtoMessage()               {}
func (*Thread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Thread) GetThreadId() int32 {
	if m != nil {
		return m.ThreadId
	}
	return 0
}

func (m *Thread) GetForumId() int32 {
	if m != nil {
		return m.ForumId
	}
	return 0
}

func (m *Thread) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Thread) GetThreadInfos() []*ThreadInfo {
	if m != nil {
		return m.ThreadInfos
	}
	return nil
}

func (m *Thread) GetPosts() []*Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

func init() {
	proto.RegisterType((*Post)(nil), "stage1stpb.Post")
	proto.RegisterType((*ThreadInfo)(nil), "stage1stpb.ThreadInfo")
	proto.RegisterType((*Thread)(nil), "stage1stpb.Thread")
}

func init() { proto.RegisterFile("stage1st.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x10, 0x80, 0xa9, 0xfd, 0xb1, 0x9d, 0x15, 0x91, 0x41, 0x96, 0x88, 0x1e, 0x4a, 0x0f, 0xd2, 0x53,
	0x41, 0x3d, 0xf9, 0x08, 0xbd, 0x49, 0x58, 0xc1, 0xdb, 0xd2, 0xb5, 0xa9, 0x5b, 0xdc, 0x26, 0x21,
	0x99, 0x7d, 0x38, 0xdf, 0x4e, 0x92, 0xb4, 0xd6, 0xdb, 0x7c, 0x33, 0xcc, 0x37, 0x3f, 0x70, 0x6d,
	0xa9, 0xfb, 0x12, 0x4f, 0x96, 0x1a, 0x6d, 0x14, 0x29, 0x84, 0x85, 0xf5, 0xa1, 0x7a, 0x87, 0xe4,
	0x4d, 0x59, 0x42, 0x06, 0x97, 0x9f, 0x4a, 0x92, 0x90, 0xc4, 0xa2, 0x32, 0xaa, 0x0b, 0xbe, 0x20,
	0x6e, 0x21, 0xeb, 0xce, 0x74, 0x54, 0x86, 0x5d, 0xf8, 0xc2, 0x4c, 0x78, 0x0f, 0x85, 0x56, 0x96,
	0xf6, 0x34, 0x4e, 0x82, 0xc5, 0x65, 0x54, 0xc7, 0x3c, 0x77, 0x89, 0xdd, 0x38, 0x89, 0xea, 0x03,
	0x60, 0x77, 0x34, 0xa2, 0xeb, 0x5b, 0x39, 0x28, 0x44, 0x48, 0x4c, 0x27, 0xbf, 0xbd, 0x39, 0xe5,
	0x3e, 0x76, 0x03, 0x8d, 0xd0, 0xa7, 0x51, 0x58, 0xef, 0x4d, 0xf9, 0x82, 0xf8, 0x00, 0x85, 0x73,
	0x5a, 0xea, 0x26, 0x3d, 0x8b, 0xd7, 0x44, 0xf5, 0x13, 0x41, 0x16, 0xd4, 0x6e, 0x03, 0xf2, 0xd1,
	0x7e, 0xec, 0x67, 0x77, 0x1e, 0x12, 0x6d, 0x8f, 0x77, 0x90, 0x0f, 0xca, 0x9c, 0x27, 0x57, 0x9b,
	0x07, 0x78, 0x6e, 0x7b, 0xbc, 0x85, 0x94, 0x46, 0x3a, 0x85, 0xad, 0x0b, 0x1e, 0x00, 0x5f, 0xe1,
	0x6a, 0xb1, 0xc9, 0x41, 0x59, 0x96, 0x94, 0x71, 0xbd, 0x79, 0xde, 0x36, 0xeb, 0xb3, 0x9a, 0xf5,
	0x24, 0xbe, 0xa1, 0xbf, 0xd8, 0xe2, 0x23, 0xa4, 0xee, 0x72, 0xcb, 0x52, 0xdf, 0x73, 0xf3, 0xbf,
	0xc7, 0x7d, 0x97, 0x87, 0xf2, 0x21, 0xf3, 0xff, 0x7f, 0xf9, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xe4,
	0x30, 0x87, 0x02, 0x91, 0x01, 0x00, 0x00,
}
